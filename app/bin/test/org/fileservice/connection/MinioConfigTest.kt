package org.fileservice.connection

import java.io.File
import kotlin.io.path.createTempDirectory
import org.junit.jupiter.api.*

class MinioConfigTest {

  private lateinit var tempDir: File
  private var originalUserDir: String? = null

  @BeforeEach
  fun setup() {
    // ????????? ??????? ??????? ??????????
    originalUserDir = System.getProperty("user.dir")

    // ?????? ????????? ?????????? ? .env
    tempDir = createTempDirectory().toFile()
    File(tempDir, ".env").writeText("") // ?????? ?????? .env
    System.setProperty("user.dir", tempDir.absolutePath) // ?????? ??????? ??????????
  }

  @AfterEach
  fun teardown() {
    // ??????????????? ?????????? ??????????
    originalUserDir?.let { System.setProperty("user.dir", it) }
  }

  @Test
  fun `load should return defaults when no env variables are set`() {
    val config = MinioConfig.load()

    println("Loaded config: $config")

    println("minioEndpoint: ${config.minioEndpoint}")
    println("minioAccessKey: ${config.minioAccessKey}")
    println("minioSecretKey: ${config.minioSecretKey}")
    println("minioBucketName: ${config.minioBucketName}")
    println("apiHost: ${config.apiHost}")
    println("apiPort: ${config.apiPort}")
  }
}
